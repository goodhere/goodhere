/// <reference types="node" />
import events from 'events';
import AlgoliaSearchHelper from '../algoliasearch.helper';
import SearchParameters from '../SearchParameters';
import SearchResults from '../SearchResults';
/**
 * A DerivedHelper is a way to create sub requests to
 * Algolia from a main helper.
 * @class
 * @classdesc The DerivedHelper provides an event based interface for search callbacks:
 *  - search: when a search is triggered using the `search()` method.
 *  - result: when the response is retrieved from Algolia and is processed.
 *    This event contains a {@link SearchResults} object and the
 *    {@link SearchParameters} corresponding to this answer.
 */
declare class DerivedHelper extends events.EventEmitter {
    main: AlgoliaSearchHelper;
    fn: ((params: SearchParameters) => SearchParameters);
    lastResults: SearchResults | null;
    constructor(mainHelper: AlgoliaSearchHelper, fn: ((params: SearchParameters) => SearchParameters));
    /**
     * Detach this helper from the main helper
     * @return {undefined}
     * @throws Error if the derived helper is already detached
     */
    detach(): void;
    getModifiedState(parameters: SearchParameters): SearchParameters;
}
export default DerivedHelper;
