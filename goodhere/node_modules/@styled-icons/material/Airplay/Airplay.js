"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var styled_icon_1 = require("@styled-icons/styled-icon");
exports.Airplay = React.forwardRef(function (props, ref) {
    var attrs = {
        "fill": "currentColor",
        "xmlns": "http://www.w3.org/2000/svg",
    };
    return (React.createElement(styled_icon_1.StyledIconBase, tslib_1.__assign({ iconAttrs: attrs, iconVerticalAlign: "middle", iconViewBox: "0 0 24 24" }, props, { ref: ref }),
        React.createElement("defs", { key: "k0" },
            React.createElement("path", { d: "M0 0h24v24H0V0z" })),
        React.createElement("defs", { key: "k1" },
            React.createElement("path", { d: "M0 0h24v24H0V0z" })),
        React.createElement("clipPath", { key: "k2" },
            React.createElement("use", { overflow: "visible", xlinkHref: "#a" })),
        React.createElement("clipPath", { clipPath: "url(#b)", key: "k3" },
            React.createElement("use", { overflow: "visible", xlinkHref: "#c" })),
        React.createElement("path", { d: "M6 22h12l-6-6zM21 3H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4v-2H3V5h18v12h-4v2h4c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z", clipPath: "url(#d)", key: "k4" })));
});
exports.Airplay.displayName = 'Airplay';
exports.AirplayDimensions = { height: 24, width: 24 };
