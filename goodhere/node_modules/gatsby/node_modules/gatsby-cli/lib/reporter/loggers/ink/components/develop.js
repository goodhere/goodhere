"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

exports.__esModule = true;
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _ink = require("ink");

var _context = _interopRequireDefault(require("../context"));

// Track the width and height of the terminal. Responsive app design baby!
const useTerminalResize = () => {
  const _useContext = (0, _react.useContext)(_ink.StdoutContext),
        stdout = _useContext.stdout;

  const _useState = (0, _react.useState)([stdout.columns, stdout.rows]),
        sizes = _useState[0],
        setSizes = _useState[1];

  (0, _react.useEffect)(() => {
    stdout.on(`resize`, () => {
      setSizes([stdout.columns, stdout.rows]);
    });
    return () => {
      stdout.off(`resize`);
    };
  }, [stdout]);
  return sizes;
};

const mapConstantToStatus = {
  IN_PROGRESS: `In Progress`,
  NOT_STARTED: `Not Started`,
  INTERRUPTED: `Interrupted`,
  FAILED: `Failed`,
  SUCCESS: `Success`,
  CANCELLED: `Cancelled`
};

const Develop = ({
  pagesCount,
  appName,
  status
}) => {
  const _useTerminalResize = useTerminalResize(),
        width = _useTerminalResize[0];

  return _react.default.createElement(_ink.Box, {
    flexDirection: "column",
    marginTop: 2
  }, _react.default.createElement(_ink.Box, {
    textWrap: `truncate`
  }, `â€”`.repeat(width)), _react.default.createElement(_ink.Box, {
    height: 1,
    flexDirection: "row"
  }, _react.default.createElement(_ink.Color, null, pagesCount, " pages"), _react.default.createElement(_ink.Box, {
    flexGrow: 1
  }), _react.default.createElement(_ink.Color, null, mapConstantToStatus[status]), _react.default.createElement(_ink.Box, {
    flexGrow: 1
  }), _react.default.createElement(_ink.Color, null, appName)));
};

const ConnectedDevelop = () => {
  const state = (0, _react.useContext)(_context.default);
  return _react.default.createElement(Develop, {
    pagesCount: state.pages ? state.pages.size : 0,
    appName: state.program ? state.program.sitePackageJson.name || `` : ``,
    status: state.logs ? state.logs.status : ``
  });
};

var _default = ConnectedDevelop;
exports.default = _default;