"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _joi = _interopRequireDefault(require("@hapi/joi"));

var _stackTrace = _interopRequireDefault(require("stack-trace"));

var _errorSchema = _interopRequireDefault(require("./error-schema"));

var _errorMap = require("./error-map");

var _errors = require("../reporter/errors");

// Merge partial error details with information from the errorMap
// Validate the constructed object against an error schema
const constructError = (_ref) => {
  let _ref$details = _ref.details,
      id = _ref$details.id,
      otherDetails = (0, _objectWithoutPropertiesLoose2.default)(_ref$details, ["id"]);
  const result = id && _errorMap.errorMap[id] || _errorMap.defaultError; // merge

  const structuredError = Object.assign({
    context: {}
  }, otherDetails, {}, result, {
    text: result.text(otherDetails.context),
    stack: otherDetails.error ? (0, _errors.sanitizeStructuredStackTrace)(_stackTrace.default.parse(otherDetails.error)) : null,
    docsUrl: result.docsUrl || `https://gatsby.dev/issue-how-to`
  });

  if (id) {
    structuredError.code = id;
  } // validate


  const _Joi$validate = _joi.default.validate(structuredError, _errorSchema.default),
        error = _Joi$validate.error;

  if (error !== null) {
    console.log(`Failed to validate error`, error);
    process.exit(1);
  }

  return structuredError;
};

var _default = constructError;
exports.default = _default;