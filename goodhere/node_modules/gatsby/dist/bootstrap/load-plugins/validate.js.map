{"version":3,"sources":["../../../src/bootstrap/load-plugins/validate.js"],"names":["_","require","semver","stringSimilarity","version","gatsbyVersion","reporter","resolveModuleExports","getLatestAPIs","getGatsbyUpgradeVersion","entries","reduce","entry","api","gt","getBadExports","plugin","pluginAPIKeys","apis","badExports","concat","difference","map","e","exportName","pluginName","name","pluginVersion","getErrorContext","exportType","currentAPIs","latestAPIs","ex","gatsbyUpgradeVersion","errors","fixes","forEach","similarities","findBestMatch","isDefaultPlugin","message","push","bestMatch","rating","target","sourceMessage","length","filter","Boolean","join","handleBadExports","hasBadExports","Object","keys","find","toPairs","badItem","context","error","id","collatePluginAPIs","flattenedPlugins","node","browser","ssr","nodeAPIs","browserAPIs","ssrAPIs","pluginNodeExports","resolve","mode","pluginBrowserExports","pluginSSRExports","intersection","handleMultipleReplaceRenderers","rendererPlugins","includes","warn","console","log","process","env","NODE_ENV","exit","ignorable","slice","messages","fp","i","skipSSR","m","warnOnIncompatiblePeerDependency","packageJSON","gatsbyPeerDependency","get","satisfies","includePrerelease","module","exports"],"mappings":"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","sourcesContent":["const _ = require(`lodash`)\nconst semver = require(`semver`)\nconst stringSimilarity = require(`string-similarity`)\nconst { version: gatsbyVersion } = require(`gatsby/package.json`)\nconst reporter = require(`gatsby-cli/lib/reporter`)\nconst resolveModuleExports = require(`../resolve-module-exports`)\nconst getLatestAPIs = require(`../../utils/get-latest-apis`)\n\nconst getGatsbyUpgradeVersion = entries =>\n  entries.reduce((version, entry) => {\n    if (entry.api && entry.api.version) {\n      return semver.gt(entry.api.version, version || `0.0.0`)\n        ? entry.api.version\n        : version\n    }\n    return version\n  }, ``)\n\n// Given a plugin object, an array of the API names it exports and an\n// array of valid API names, return an array of invalid API exports.\nconst getBadExports = (plugin, pluginAPIKeys, apis) => {\n  let badExports = []\n  // Discover any exports from plugins which are not \"known\"\n  badExports = badExports.concat(\n    _.difference(pluginAPIKeys, apis).map(e => {\n      return {\n        exportName: e,\n        pluginName: plugin.name,\n        pluginVersion: plugin.version,\n      }\n    })\n  )\n  return badExports\n}\n\nconst getErrorContext = (badExports, exportType, currentAPIs, latestAPIs) => {\n  const entries = badExports.map(ex => {\n    return {\n      ...ex,\n      api: latestAPIs[exportType][ex.exportName],\n    }\n  })\n\n  const gatsbyUpgradeVersion = getGatsbyUpgradeVersion(entries)\n  let errors = []\n  let fixes = [].concat(\n    gatsbyUpgradeVersion ? [`npm install gatsby@^${gatsbyUpgradeVersion}`] : []\n  )\n\n  entries.forEach(entry => {\n    const similarities = stringSimilarity.findBestMatch(\n      entry.exportName,\n      currentAPIs[exportType]\n    )\n    const isDefaultPlugin = entry.pluginName == `default-site-plugin`\n\n    const message = entry.api\n      ? entry.api.version\n        ? `was introduced in gatsby@${entry.api.version}`\n        : `is not available in your version of Gatsby`\n      : `is not a known API`\n\n    if (isDefaultPlugin) {\n      errors.push(\n        `- Your local gatsby-${exportType}.js is using the API \"${entry.exportName}\" which ${message}.`\n      )\n    } else {\n      errors.push(\n        `- The plugin ${entry.pluginName}@${entry.pluginVersion} is using the API \"${entry.exportName}\" which ${message}.`\n      )\n    }\n\n    if (similarities.bestMatch.rating > 0.5) {\n      fixes.push(\n        `Rename \"${entry.exportName}\" -> \"${similarities.bestMatch.target}\"`\n      )\n    }\n  })\n\n  return {\n    errors,\n    entries,\n    exportType,\n    fixes,\n    // note: this is a fallback if gatsby-cli is not updated with structured error\n    sourceMessage: [\n      `Your plugins must export known APIs from their gatsby-node.js.`,\n    ]\n      .concat(errors)\n      .concat(\n        fixes.length > 0 && [\n          `\\n`,\n          `Some of the following may help fix the error(s):`,\n          ...fixes,\n        ]\n      )\n      .filter(Boolean)\n      .join(`\\n`),\n  }\n}\n\nconst handleBadExports = async ({ currentAPIs, badExports }) => {\n  const hasBadExports = Object.keys(badExports).find(\n    api => badExports[api].length > 0\n  )\n  if (hasBadExports) {\n    const latestAPIs = await getLatestAPIs()\n    // Output error messages for all bad exports\n    _.toPairs(badExports).forEach(badItem => {\n      const [exportType, entries] = badItem\n      if (entries.length > 0) {\n        const context = getErrorContext(\n          entries,\n          exportType,\n          currentAPIs,\n          latestAPIs\n        )\n        reporter.error({\n          id: `11329`,\n          context,\n        })\n      }\n    })\n  }\n}\n\n/**\n * Identify which APIs each plugin exports\n */\nconst collatePluginAPIs = ({ currentAPIs, flattenedPlugins }) => {\n  // Get a list of bad exports\n  const badExports = {\n    node: [],\n    browser: [],\n    ssr: [],\n  }\n\n  flattenedPlugins.forEach(plugin => {\n    plugin.nodeAPIs = []\n    plugin.browserAPIs = []\n    plugin.ssrAPIs = []\n\n    // Discover which APIs this plugin implements and store an array against\n    // the plugin node itself *and* in an API to plugins map for faster lookups\n    // later.\n    const pluginNodeExports = resolveModuleExports(\n      `${plugin.resolve}/gatsby-node`,\n      {\n        mode: `require`,\n      }\n    )\n    const pluginBrowserExports = resolveModuleExports(\n      `${plugin.resolve}/gatsby-browser`\n    )\n    const pluginSSRExports = resolveModuleExports(\n      `${plugin.resolve}/gatsby-ssr`\n    )\n\n    if (pluginNodeExports.length > 0) {\n      plugin.nodeAPIs = _.intersection(pluginNodeExports, currentAPIs.node)\n      badExports.node = badExports.node.concat(\n        getBadExports(plugin, pluginNodeExports, currentAPIs.node)\n      ) // Collate any bad exports\n    }\n\n    if (pluginBrowserExports.length > 0) {\n      plugin.browserAPIs = _.intersection(\n        pluginBrowserExports,\n        currentAPIs.browser\n      )\n      badExports.browser = badExports.browser.concat(\n        getBadExports(plugin, pluginBrowserExports, currentAPIs.browser)\n      ) // Collate any bad exports\n    }\n\n    if (pluginSSRExports.length > 0) {\n      plugin.ssrAPIs = _.intersection(pluginSSRExports, currentAPIs.ssr)\n      badExports.ssr = badExports.ssr.concat(\n        getBadExports(plugin, pluginSSRExports, currentAPIs.ssr)\n      ) // Collate any bad exports\n    }\n  })\n\n  return { flattenedPlugins, badExports }\n}\n\nconst handleMultipleReplaceRenderers = ({ flattenedPlugins }) => {\n  // multiple replaceRenderers may cause problems at build time\n  const rendererPlugins = flattenedPlugins\n    .filter(plugin => plugin.ssrAPIs.includes(`replaceRenderer`))\n    .map(plugin => plugin.name)\n  if (rendererPlugins.length > 1) {\n    if (rendererPlugins.includes(`default-site-plugin`)) {\n      reporter.warn(`replaceRenderer API found in these plugins:`)\n      reporter.warn(rendererPlugins.join(`, `))\n      reporter.warn(\n        `This might be an error, see: https://www.gatsbyjs.org/docs/debugging-replace-renderer-api/`\n      )\n    } else {\n      console.log(``)\n      reporter.error(\n        `Gatsby's replaceRenderer API is implemented by multiple plugins:`\n      )\n      reporter.error(rendererPlugins.join(`, `))\n      reporter.error(`This will break your build`)\n      reporter.error(\n        `See: https://www.gatsbyjs.org/docs/debugging-replace-renderer-api/`\n      )\n      if (process.env.NODE_ENV === `production`) process.exit(1)\n    }\n\n    // Now update plugin list so only final replaceRenderer will run\n    const ignorable = rendererPlugins.slice(0, -1)\n\n    // For each plugin in ignorable, set a skipSSR flag to true\n    // This prevents apiRunnerSSR() from attempting to run it later\n    const messages = []\n    flattenedPlugins.forEach((fp, i) => {\n      if (ignorable.includes(fp.name)) {\n        messages.push(\n          `Duplicate replaceRenderer found, skipping gatsby-ssr.js for plugin: ${fp.name}`\n        )\n        flattenedPlugins[i].skipSSR = true\n      }\n    })\n    if (messages.length > 0) {\n      console.log(``)\n      messages.forEach(m => reporter.warn(m))\n      console.log(``)\n    }\n  }\n\n  return flattenedPlugins\n}\n\nfunction warnOnIncompatiblePeerDependency(name, packageJSON) {\n  // Note: In the future the peer dependency should be enforced for all plugins.\n  const gatsbyPeerDependency = _.get(packageJSON, `peerDependencies.gatsby`)\n  if (\n    gatsbyPeerDependency &&\n    !semver.satisfies(gatsbyVersion, gatsbyPeerDependency, {\n      includePrerelease: true,\n    })\n  ) {\n    reporter.warn(\n      `Plugin ${name} is not compatible with your gatsby version ${gatsbyVersion} - It requires gatsby@${gatsbyPeerDependency}`\n    )\n  }\n}\n\nmodule.exports = {\n  collatePluginAPIs,\n  handleBadExports,\n  handleMultipleReplaceRenderers,\n  warnOnIncompatiblePeerDependency,\n}\n"],"file":"validate.js"}