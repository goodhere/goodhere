{"version":3,"sources":["../../../src/db/loki/custom-comparators.js"],"names":["ltHelper","prop1","prop2","equal","cv1","cv2","t1","t2","undefined","Number","toString","gtHelper","aeqHelper","module","exports"],"mappings":"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","sourcesContent":["// Gatsby has very specific sorting requirements. Specifically,\n// undefined > null > everything else. So, if an orderby `desc` is\n// specified, then nulls and undefined values are of higher rank. This\n// is due to the use of lodash's `orderBy` function in\n// `run-sift`.\n//\n// The below functions are alternate versions of the comparators used\n// by loki that match lodash's behavior\n//\n// Note: This is quite hacky and not officially supported by Loki, but\n// works quite well.\n//\n// The below implementation is a direct copy of Loki, except that\n// undefined's rank is 11, and null's rank is 10. Whereas in loki,\n// they are both of rank 1\n//\n// Another change is that strings aren't coerced to numbers\nfunction ltHelper(prop1, prop2, equal) {\n  var cv1, cv2, t1, t2\n\n  // if one of the params is falsy or strictly true or not equal to itself\n  // 0, 0.0, \"\", NaN, null, undefined, not defined, false, true\n  if (\n    !prop1 ||\n    !prop2 ||\n    prop1 === true ||\n    prop2 === true ||\n    prop1 !== prop1 ||\n    prop2 !== prop2\n  ) {\n    switch (prop1) {\n      case undefined:\n        t1 = 11\n        break\n      case null:\n        t1 = 10\n        break\n      case false:\n        t1 = 3\n        break\n      case true:\n        t1 = 4\n        break\n      case ``:\n        t1 = 5\n        break\n      // if strict equal probably 0 so sort higher, otherwise\n      // probably NaN so sort lower than even null\n      default:\n        t1 = prop1 === prop1 ? 9 : 0\n        break\n    }\n\n    switch (prop2) {\n      case undefined:\n        t2 = 11\n        break\n      case null:\n        t2 = 10\n        break\n      case false:\n        t2 = 3\n        break\n      case true:\n        t2 = 4\n        break\n      case ``:\n        t2 = 5\n        break\n      default:\n        t2 = prop2 === prop2 ? 9 : 0\n        break\n    }\n\n    // one or both is edge case\n    if (t1 !== 9 || t2 !== 9) {\n      return t1 === t2 ? equal : t1 < t2\n    }\n  }\n\n  // if both are numbers, compare as numbers.\n  // NB: Changed from loki - strings compared as strings\n  cv1 = Number(prop1)\n  cv2 = Number(prop2)\n\n  if (cv1 === prop1 && cv2 === prop2) {\n    if (cv1 < cv2) return true\n    if (cv1 > cv2) return false\n    return equal\n  }\n\n  if (cv1 === cv1 && cv2 !== cv2) {\n    return true\n  }\n\n  if (cv2 === cv2 && cv1 !== cv1) {\n    return false\n  }\n\n  if (prop1 < prop2) return true\n  if (prop1 > prop2) return false\n  if (prop1 == prop2) return equal\n\n  // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n  cv1 = prop1.toString()\n  cv2 = prop2.toString()\n\n  if (cv1 < cv2) {\n    return true\n  }\n\n  if (cv1 == cv2) {\n    return equal\n  }\n\n  return false\n}\n\nfunction gtHelper(prop1, prop2, equal) {\n  var cv1, cv2, t1, t2\n\n  // 'falsy' and Boolean handling\n  if (\n    !prop1 ||\n    !prop2 ||\n    prop1 === true ||\n    prop2 === true ||\n    prop1 !== prop1 ||\n    prop2 !== prop2\n  ) {\n    switch (prop1) {\n      case undefined:\n        t1 = 11\n        break\n      case null:\n        t1 = 10\n        break\n      case false:\n        t1 = 3\n        break\n      case true:\n        t1 = 4\n        break\n      case ``:\n        t1 = 5\n        break\n      // NaN 0\n      default:\n        t1 = prop1 === prop1 ? 9 : 0\n        break\n    }\n\n    switch (prop2) {\n      case undefined:\n        t2 = 11\n        break\n      case null:\n        t2 = 10\n        break\n      case false:\n        t2 = 3\n        break\n      case true:\n        t2 = 4\n        break\n      case ``:\n        t2 = 5\n        break\n      default:\n        t2 = prop2 === prop2 ? 9 : 0\n        break\n    }\n\n    // one or both is edge case\n    if (t1 !== 9 || t2 !== 9) {\n      return t1 === t2 ? equal : t1 > t2\n    }\n  }\n\n  // if both are numbers (string encoded or not), compare as numbers\n  // NB: Changed from loki - strings compared as strings\n  cv1 = Number(prop1)\n  cv2 = Number(prop2)\n  if (cv1 === prop1 && cv2 === prop2) {\n    if (cv1 > cv2) return true\n    if (cv1 < cv2) return false\n    return equal\n  }\n\n  if (cv1 === cv1 && cv2 !== cv2) {\n    return false\n  }\n\n  if (cv2 === cv2 && cv1 !== cv1) {\n    return true\n  }\n\n  if (prop1 > prop2) return true\n  if (prop1 < prop2) return false\n  if (prop1 == prop2) return equal\n\n  // not strict equal nor less than nor gt so must be dates or mixed types\n  // convert to string and use that to compare\n  cv1 = prop1.toString()\n  cv2 = prop2.toString()\n\n  if (cv1 > cv2) {\n    return true\n  }\n\n  if (cv1 == cv2) {\n    return equal\n  }\n\n  return false\n}\n\nfunction aeqHelper(prop1, prop2) {\n  var cv1, cv2, t1, t2\n  if (prop1 === prop2) return true\n  // 'falsy' and Boolean handling\n  if (\n    !prop1 ||\n    !prop2 ||\n    prop1 === true ||\n    prop2 === true ||\n    prop1 !== prop1 ||\n    prop2 !== prop2\n  ) {\n    // dates and NaN conditions (typed dates before serialization)\n    switch (prop1) {\n      case undefined:\n        t1 = 1\n        break\n      case null:\n        t1 = 2\n        break\n      case false:\n        t1 = 3\n        break\n      case true:\n        t1 = 4\n        break\n      case ``:\n        t1 = 5\n        break\n      default:\n        t1 = prop1 === prop1 ? 9 : 0\n        break\n    }\n    switch (prop2) {\n      case undefined:\n        t2 = 1\n        break\n      case null:\n        t2 = 2\n        break\n      case false:\n        t2 = 3\n        break\n      case true:\n        t2 = 4\n        break\n      case ``:\n        t2 = 5\n        break\n      default:\n        t2 = prop2 === prop2 ? 9 : 0\n        break\n    }\n    // one or both is edge case\n    if (t1 !== 9 || t2 !== 9) {\n      return t1 === t2\n    }\n  }\n  // Handle 'Number-like' comparisons\n  cv1 = Number(prop1)\n  cv2 = Number(prop2)\n  // if one or both are 'number-like'...\n  if (cv1 === cv1 || cv2 === cv2) {\n    return cv1 === cv2\n  }\n  // not strict equal nor less than nor gt so must be mixed types, convert to string and use that to compare\n  cv1 = prop1.toString()\n  cv2 = prop2.toString()\n  return cv1 == cv2\n}\n\nmodule.exports = {\n  ltHelper,\n  gtHelper,\n  aeqHelper,\n}\n"],"file":"custom-comparators.js"}