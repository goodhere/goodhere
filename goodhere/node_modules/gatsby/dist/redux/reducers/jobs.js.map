{"version":3,"sources":["../../../src/redux/reducers/jobs.js"],"names":["_","require","oneLine","moment","module","exports","state","active","done","action","type","payload","id","Error","index","findIndex","j","mergedJob","merge","createdAt","Date","now","plugin","push","completedAt","get","job","splice","runTime","diff"],"mappings":";;AAAA,MAAMA,CAAC,GAAGC,OAAO,CAAE,QAAF,CAAjB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAAO,CAAE,aAAF,CAA3B;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAE,QAAF,CAAtB;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAACC,KAAK,GAAG;AAAEC,EAAAA,MAAM,EAAE,EAAV;AAAcC,EAAAA,IAAI,EAAE;AAApB,CAAT,EAAmCC,MAAnC,KAA8C;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAM,YAAN;AACA,SAAM,SAAN;AAAgB;AACd,YAAI,CAACD,MAAM,CAACE,OAAP,CAAeC,EAApB,EAAwB;AACtB,gBAAM,IAAIC,KAAJ,CAAW,qDAAX,CAAN;AACD;;AACD,cAAMC,KAAK,GAAGd,CAAC,CAACe,SAAF,CAAYT,KAAK,CAACC,MAAlB,EAA0BS,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASH,MAAM,CAACE,OAAP,CAAeC,EAAvD,CAAd;;AACA,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,gBAAMG,SAAS,GAAGjB,CAAC,CAACkB,KAAF,CAAQZ,KAAK,CAACC,MAAN,CAAaO,KAAb,CAAR,EAA6B,EAC7C,GAAGL,MAAM,CAACE,OADmC;AAE7CQ,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFkC;AAG7CC,YAAAA,MAAM,EAAEb,MAAM,CAACa;AAH8B,WAA7B,CAAlB;;AAMAhB,UAAAA,KAAK,CAACC,MAAN,CAAaO,KAAb,IAAsBG,SAAtB;AACA,iBAAOX,KAAP;AACD,SATD,MASO;AACLA,UAAAA,KAAK,CAACC,MAAN,CAAagB,IAAb,CAAkB,EAChB,GAAGd,MAAM,CAACE,OADM;AAEhBQ,YAAAA,SAAS,EAAEC,IAAI,CAACC,GAAL,EAFK;AAGhBC,YAAAA,MAAM,EAAEb,MAAM,CAACa;AAHC,WAAlB;AAKA,iBAAOhB,KAAP;AACD;AACF;;AACD,SAAM,SAAN;AAAgB;AACd,YAAI,CAACG,MAAM,CAACE,OAAP,CAAeC,EAApB,EAAwB;AACtB,gBAAM,IAAIC,KAAJ,CAAW,0CAAX,CAAN;AACD;;AACD,cAAMW,WAAW,GAAGJ,IAAI,CAACC,GAAL,EAApB;;AACA,cAAMP,KAAK,GAAGd,CAAC,CAACe,SAAF,CAAYT,KAAK,CAACC,MAAlB,EAA0BS,CAAC,IAAIA,CAAC,CAACJ,EAAF,KAASH,MAAM,CAACE,OAAP,CAAeC,EAAvD,CAAd;;AACA,YAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,gBAAM,IAAID,KAAJ,CAAUX,OAAQ;wBACRF,CAAC,CAACyB,GAAF,CAAMhB,MAAN,EAAe,aAAf,EAA8B,WAA9B,CAA0C;4CACtBA,MAAM,CAACE,OAAP,CAAeC,EAAG;wEAFhD,CAAN;AAID;;AACD,cAAMc,GAAG,GAAGpB,KAAK,CAACC,MAAN,CAAaoB,MAAb,CAAoBb,KAApB,EAA2B,CAA3B,EAA8B,CAA9B,CAAZ;AACAR,QAAAA,KAAK,CAACE,IAAN,CAAWe,IAAX,CAAgB,EACd,GAAGG,GADW;AAEdF,UAAAA,WAFc;AAGdI,UAAAA,OAAO,EAAEzB,MAAM,CAACqB,WAAD,CAAN,CAAoBK,IAApB,CAAyB1B,MAAM,CAACuB,GAAG,CAACP,SAAL,CAA/B;AAHK,SAAhB;AAMA,eAAOb,KAAP;AACD;AA7CH;;AAgDA,SAAOA,KAAP;AACD,CAlDD","sourcesContent":["const _ = require(`lodash`)\nconst { oneLine } = require(`common-tags`)\nconst moment = require(`moment`)\n\nmodule.exports = (state = { active: [], done: [] }, action) => {\n  switch (action.type) {\n    case `CREATE_JOB`:\n    case `SET_JOB`: {\n      if (!action.payload.id) {\n        throw new Error(`An ID must be provided when creating or setting job`)\n      }\n      const index = _.findIndex(state.active, j => j.id === action.payload.id)\n      if (index !== -1) {\n        const mergedJob = _.merge(state.active[index], {\n          ...action.payload,\n          createdAt: Date.now(),\n          plugin: action.plugin,\n        })\n\n        state.active[index] = mergedJob\n        return state\n      } else {\n        state.active.push({\n          ...action.payload,\n          createdAt: Date.now(),\n          plugin: action.plugin,\n        })\n        return state\n      }\n    }\n    case `END_JOB`: {\n      if (!action.payload.id) {\n        throw new Error(`An ID must be provided when ending a job`)\n      }\n      const completedAt = Date.now()\n      const index = _.findIndex(state.active, j => j.id === action.payload.id)\n      if (index === -1) {\n        throw new Error(oneLine`\n          The plugin \"${_.get(action, `plugin.name`, `anonymous`)}\"\n          tried to end a job with the id \"${action.payload.id}\"\n          that either hasn't yet been created or has already been ended`)\n      }\n      const job = state.active.splice(index, 1)[0]\n      state.done.push({\n        ...job,\n        completedAt,\n        runTime: moment(completedAt).diff(moment(job.createdAt)),\n      })\n\n      return state\n    }\n  }\n\n  return state\n}\n"],"file":"jobs.js"}