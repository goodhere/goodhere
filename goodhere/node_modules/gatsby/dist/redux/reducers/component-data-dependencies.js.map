{"version":3,"sources":["../../../src/redux/reducers/component-data-dependencies.js"],"names":["module","exports","state","nodes","Map","connections","action","type","payload","path","nodeId","existingPaths","Set","has","get","id","add","set","connection","forEach","val","_key","paths","delete"],"mappings":"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","sourcesContent":["module.exports = (\n  state = { nodes: new Map(), connections: new Map() },\n  action\n) => {\n  switch (action.type) {\n    case `DELETE_CACHE`:\n      return { nodes: new Map(), connections: new Map() }\n    case `CREATE_COMPONENT_DEPENDENCY`:\n      if (action.payload.path === ``) {\n        return state\n      }\n\n      // If this nodeId not set yet.\n      if (action.payload.nodeId) {\n        let existingPaths = new Set()\n        if (state.nodes.has(action.payload.nodeId)) {\n          existingPaths = state.nodes.get(action.payload.nodeId)\n        }\n        if (!existingPaths.has(action.payload.path || action.payload.id)) {\n          existingPaths.add(action.payload.path || action.payload.id)\n        }\n        state.nodes.set(action.payload.nodeId, existingPaths)\n      }\n\n      // If this connection not set yet.\n      if (action.payload.connection) {\n        let existingPaths = new Set()\n        if (state.connections.has(action.payload.connection)) {\n          existingPaths = state.connections.get(action.payload.connection)\n        }\n        if (!existingPaths.has(action.payload.path || action.payload.id)) {\n          existingPaths.add(action.payload.path || action.payload.id)\n        }\n        state.connections.set(action.payload.connection, existingPaths)\n      }\n\n      return state\n    case `DELETE_COMPONENTS_DEPENDENCIES`:\n      state.nodes.forEach((val, _key) => {\n        for (const path of action.payload.paths) {\n          val.delete(path)\n        }\n      })\n      state.connections.forEach((val, _key) => {\n        for (const path of action.payload.paths) {\n          val.delete(path)\n        }\n      })\n\n      return state\n    // Don't delete data dependencies as we're now deleting transformed nodes\n    // when their parent is changed. WIth the code below as stands, this\n    // would delete the connection between the page and the transformed\n    // node which will be recreated after its deleted meaning the query\n    // won't be re-run.\n    // case `DELETE_NODE`:\n    // delete state.nodes[action.payload]\n    // return state\n    // case `DELETE_NODES`:\n    // action.payload.forEach(n => delete state.nodes[n])\n    // return state\n    default:\n      return state\n  }\n}\n"],"file":"component-data-dependencies.js"}