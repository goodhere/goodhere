{"version":3,"sources":["../../src/utils/webpack-error-utils.ts"],"names":["reporter","require","stageCodeToReadableLabel","develop","transformWebpackError","stage","webpackError","id","filePath","module","resource","location","error","loc","start","undefined","context","stageLabel","message","structureWebpackErrors","Array","isArray","map","e","reportWebpackWarnings","stats","compilation","warnings","forEach","webpackWarning","warning","warn","toString"],"mappings":";;;;;AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAE,yBAAF,CAAxB;;AAGA,MAAMC,wBAAwB,GAAG;AAC/B,sBAAqB,+BADU;AAE/B,gBAAe,uBAFgB;AAG/BC,EAAAA,OAAO,EAAG;AAHqB,CAAjC;;AAqBA,MAAMC,qBAAqB,GAAG,CAC5BC,KAD4B,EAE5BC,YAF4B,KAGC;AAAA;;AAC7B,SAAO;AACLC,IAAAA,EAAE,EAAG,OADA;AAELC,IAAAA,QAAQ,EAAEF,YAAF,aAAEA,YAAF,+CAAEA,YAAY,CAAEG,MAAhB,yDAAE,qBAAsBC,QAF3B;AAGLC,IAAAA,QAAQ,EACN,CAAAL,YAAY,SAAZ,IAAAA,YAAY,WAAZ,qCAAAA,YAAY,CAAEG,MAAd,gFAAsBC,QAAtB,MAAkCJ,YAAlC,aAAkCA,YAAlC,8CAAkCA,YAAY,CAAEM,KAAhD,wDAAkC,oBAAqBC,GAAvD,IACI;AACEC,MAAAA,KAAK,EAAER,YAAY,CAACM,KAAb,CAAmBC;AAD5B,KADJ,GAIIE,SARD;AASLC,IAAAA,OAAO,EAAE;AACPX,MAAAA,KADO;AAEPY,MAAAA,UAAU,EAAEf,wBAAwB,CAACG,KAAD,CAF7B;AAGPa,MAAAA,OAAO,EAAE,CAAAZ,YAAY,SAAZ,IAAAA,YAAY,WAAZ,oCAAAA,YAAY,CAAEM,KAAd,8EAAqBM,OAArB,MAAgCZ,YAAhC,aAAgCA,YAAhC,uBAAgCA,YAAY,CAAEY,OAA9C;AAHF,KATJ,CAeL;AACA;AACA;AACA;AACA;;AAnBK,GAAP;AAqBD,CAzBD;;AA2BO,MAAMC,sBAAsB,GAAG,CACpCd,KADoC,EAEpCC,YAFoC,KAGsB;AAC1D,MAAIc,KAAK,CAACC,OAAN,CAAcf,YAAd,CAAJ,EAAiC;AAC/B,WAAOA,YAAY,CAACgB,GAAb,CAAiBC,CAAC,IAAInB,qBAAqB,CAACC,KAAD,EAAQkB,CAAR,CAA3C,CAAP;AACD;;AAED,SAAOnB,qBAAqB,CAACC,KAAD,EAAQC,YAAR,CAA5B;AACD,CATM;;;;AAWA,MAAMkB,qBAAqB,GAAIC,KAAD,IAAwB;AAC3DA,EAAAA,KAAK,CAACC,WAAN,CAAkBC,QAAlB,CAA2BC,OAA3B,CAAmCC,cAAc,IAAI;AACnD,QAAIA,cAAc,CAACC,OAAnB,EAA4B;AAC1B;AACA9B,MAAAA,QAAQ,CAAC+B,IAAT,CAAcF,cAAc,CAACC,OAAf,CAAuBE,QAAvB,EAAd;AACD,KAHD,MAGO;AACLhC,MAAAA,QAAQ,CAAC+B,IAAT,CAAcF,cAAc,CAACX,OAA7B;AACD;AACF,GAPD;AAQD,CATM","sourcesContent":["const reporter = require(`gatsby-cli/lib/reporter`)\nimport { Stats } from \"webpack\"\n\nconst stageCodeToReadableLabel = {\n  \"build-javascript\": `Generating JavaScript bundles`,\n  \"build-html\": `Generating SSR bundle`,\n  develop: `Generating development JavaScript bundle`,\n} as const\n\ntype Stage = keyof typeof stageCodeToReadableLabel\ntype StageLabel = typeof stageCodeToReadableLabel[Stage]\n\ninterface ITransformedWebpackError {\n  id: \"98123\"\n  filePath?: string\n  location?: {\n    start: string\n  }\n  context: {\n    stage: Stage\n    stageLabel: StageLabel\n    message?: string\n  }\n}\nconst transformWebpackError = (\n  stage: keyof typeof stageCodeToReadableLabel,\n  webpackError: any\n): ITransformedWebpackError => {\n  return {\n    id: `98123`,\n    filePath: webpackError?.module?.resource,\n    location:\n      webpackError?.module?.resource && webpackError?.error?.loc\n        ? {\n            start: webpackError.error.loc,\n          }\n        : undefined,\n    context: {\n      stage,\n      stageLabel: stageCodeToReadableLabel[stage],\n      message: webpackError?.error?.message || webpackError?.message,\n    },\n\n    // We use original error to display stack trace for the most part.\n    // In case of webpack error stack will include internals of webpack\n    // or one of loaders (for example babel-loader) and doesn't provide\n    // much value to user, so it's purposely omitted.\n    // error: webpackError?.error || webpackError,\n  }\n}\n\nexport const structureWebpackErrors = (\n  stage: Stage,\n  webpackError: any\n): ITransformedWebpackError[] | ITransformedWebpackError => {\n  if (Array.isArray(webpackError)) {\n    return webpackError.map(e => transformWebpackError(stage, e))\n  }\n\n  return transformWebpackError(stage, webpackError)\n}\n\nexport const reportWebpackWarnings = (stats: Stats): void => {\n  stats.compilation.warnings.forEach(webpackWarning => {\n    if (webpackWarning.warning) {\n      // grab inner Exception if it exists\n      reporter.warn(webpackWarning.warning.toString())\n    } else {\n      reporter.warn(webpackWarning.message)\n    }\n  })\n}\n"],"file":"webpack-error-utils.js"}