{"version":3,"sources":["../../src/commands/build.js"],"names":["path","require","report","fs","bootstrap","apiRunnerNode","GraphQLRunner","default","copyStaticDirs","db","signalExit","telemetry","store","readState","queryUtil","boundActionCreators","cachedPageData","cachedWebpackCompilationHash","process","env","GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES","pageData","webpackCompilationHash","module","exports","build","program","profile","warn","publicDir","join","directory","openTracingConfigFile","buildActivity","phantomActivity","start","trackCli","exitCode","buildSpan","span","setTag","graphqlRunner","bootstrapGraphQLRunner","parentSpan","collectStats","processPageQueries","processStaticQueries","getInitialQueryProcessors","graphql","activity","activityTimer","stats","catch","err","panic","end","workerPool","WorkerPool","create","hash","getState","appDataUtil","exists","dispatch","type","payload","write","pages","forEach","_value","key","has","removePageData","id","isTrackingEnabled","bundleSizes","toJson","assets","filter","asset","name","endsWith","map","size","pageDataSizes","pageDataStats","values","addSiteMeasurement","bundleStats","aggregateStats","queryStats","getStats","setProgramStatus","saveState","pagePaths","keys","buildUtils","getChangedPageDataKeys","createProgress","length","stage","context","errorPath","match","message","ref","error","done","deletedPageKeys","collectRemovedPageData","removePageFiles","info","uptime","finish","argv","includes","createdFilesPath","resolve","deletedFilesPath","writeFile"],"mappings":"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","sourcesContent":["/* @flow */\n\nconst path = require(`path`)\nconst report = require(`gatsby-cli/lib/reporter`)\nconst fs = require(`fs-extra`)\nimport { buildHTML } from \"./build-html\"\nimport { buildProductionBundle } from \"./build-javascript\"\nconst bootstrap = require(`../bootstrap`)\nconst apiRunnerNode = require(`../utils/api-runner-node`)\nconst GraphQLRunner = require(`../query/graphql-runner`).default\nconst { copyStaticDirs } = require(`../utils/get-static-dir`)\nimport { initTracer, stopTracer } from \"../utils/tracer\"\nconst db = require(`../db`)\nconst signalExit = require(`signal-exit`)\nconst telemetry = require(`gatsby-telemetry`)\nconst { store, readState } = require(`../redux`)\nconst queryUtil = require(`../query`)\nimport * as appDataUtil from \"../utils/app-data\"\nimport * as WorkerPool from \"../utils/worker/pool\"\nimport { structureWebpackErrors } from \"../utils/webpack-error-utils\"\nimport {\n  userPassesFeedbackRequestHeuristic,\n  showFeedbackRequest,\n} from \"../utils/feedback\"\nimport * as buildUtils from \"./build-utils\"\nconst { boundActionCreators } = require(`../redux/actions`)\nimport { waitUntilAllJobsComplete } from \"../utils/wait-until-jobs-complete\"\n\nlet cachedPageData\nlet cachedWebpackCompilationHash\nif (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n  const { pageData, webpackCompilationHash } = readState()\n  // extract only data that we need to reuse and let v8 garbage collect rest of state\n  cachedPageData = pageData\n  cachedWebpackCompilationHash = webpackCompilationHash\n}\n\ntype BuildArgs = {\n  directory: string,\n  sitePackageJson: object,\n  prefixPaths: boolean,\n  noUglify: boolean,\n  profile: boolean,\n  openTracingConfigFile: string,\n}\n\nmodule.exports = async function build(program: BuildArgs) {\n  if (program.profile) {\n    report.warn(\n      `React Profiling is enabled. This can have a performance impact. See https://www.gatsbyjs.org/docs/profiling-site-performance-with-react-profiler/#performance-impact`\n    )\n  }\n\n  const publicDir = path.join(program.directory, `public`)\n  initTracer(program.openTracingConfigFile)\n  const buildActivity = report.phantomActivity(`build`)\n  buildActivity.start()\n\n  telemetry.trackCli(`BUILD_START`)\n  signalExit(exitCode => {\n    telemetry.trackCli(`BUILD_END`, { exitCode })\n  })\n\n  const buildSpan = buildActivity.span\n  buildSpan.setTag(`directory`, program.directory)\n\n  const { graphqlRunner: bootstrapGraphQLRunner } = await bootstrap({\n    ...program,\n    parentSpan: buildSpan,\n  })\n\n  const graphqlRunner = new GraphQLRunner(store, { collectStats: true })\n\n  const {\n    processPageQueries,\n    processStaticQueries,\n  } = queryUtil.getInitialQueryProcessors({\n    parentSpan: buildSpan,\n    graphqlRunner,\n  })\n\n  await processStaticQueries()\n\n  await apiRunnerNode(`onPreBuild`, {\n    graphql: bootstrapGraphQLRunner,\n    parentSpan: buildSpan,\n  })\n\n  // Copy files from the static directory to\n  // an equivalent static directory within public.\n  copyStaticDirs()\n\n  let activity = report.activityTimer(\n    `Building production JavaScript and CSS bundles`,\n    { parentSpan: buildSpan }\n  )\n  activity.start()\n  const stats = await buildProductionBundle(program, activity.span).catch(\n    err => {\n      activity.panic(structureWebpackErrors(`build-javascript`, err))\n    }\n  )\n  activity.end()\n\n  const workerPool = WorkerPool.create()\n\n  const webpackCompilationHash = stats.hash\n  if (\n    webpackCompilationHash !== store.getState().webpackCompilationHash ||\n    !appDataUtil.exists(publicDir)\n  ) {\n    store.dispatch({\n      type: `SET_WEBPACK_COMPILATION_HASH`,\n      payload: webpackCompilationHash,\n    })\n\n    activity = report.activityTimer(`Rewriting compilation hashes`, {\n      parentSpan: buildSpan,\n    })\n    activity.start()\n\n    await appDataUtil.write(publicDir, webpackCompilationHash)\n\n    activity.end()\n  }\n\n  await processPageQueries()\n\n  if (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n    const { pages } = store.getState()\n    if (cachedPageData) {\n      cachedPageData.forEach((_value, key) => {\n        if (!pages.has(key)) {\n          boundActionCreators.removePageData({\n            id: key,\n          })\n        }\n      })\n    }\n  }\n\n  if (telemetry.isTrackingEnabled()) {\n    // transform asset size to kB (from bytes) to fit 64 bit to numbers\n    const bundleSizes = stats\n      .toJson({ assets: true })\n      .assets.filter(asset => asset.name.endsWith(`.js`))\n      .map(asset => asset.size / 1000)\n    const pageDataSizes = [...store.getState().pageDataStats.values()]\n\n    telemetry.addSiteMeasurement(`BUILD_END`, {\n      bundleStats: telemetry.aggregateStats(bundleSizes),\n      pageDataStats: telemetry.aggregateStats(pageDataSizes),\n      queryStats: graphqlRunner.getStats(),\n    })\n  }\n\n  require(`../redux/actions`).boundActionCreators.setProgramStatus(\n    `BOOTSTRAP_QUERY_RUNNING_FINISHED`\n  )\n\n  await db.saveState()\n\n  await waitUntilAllJobsComplete()\n\n  // we need to save it again to make sure our latest state has been saved\n  await db.saveState()\n\n  let pagePaths = [...store.getState().pages.keys()]\n\n  // Rebuild subset of pages if user opt into GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES\n  // if there were no source files (for example components, static queries, etc) changes since last build, otherwise rebuild all pages\n  if (\n    process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    cachedWebpackCompilationHash === store.getState().webpackCompilationHash\n  ) {\n    pagePaths = buildUtils.getChangedPageDataKeys(\n      store.getState(),\n      cachedPageData\n    )\n  }\n\n  activity = report.createProgress(\n    `Building static HTML for pages`,\n    pagePaths.length,\n    0,\n    {\n      parentSpan: buildSpan,\n    }\n  )\n  activity.start()\n  try {\n    await buildHTML({\n      program,\n      stage: `build-html`,\n      pagePaths,\n      activity,\n      workerPool,\n    })\n  } catch (err) {\n    let id = `95313` // TODO: verify error IDs exist\n    const context = {\n      errorPath: err.context && err.context.path,\n    }\n\n    const match = err.message.match(\n      /ReferenceError: (window|document|localStorage|navigator|alert|location) is not defined/i\n    )\n    if (match && match[1]) {\n      id = `95312`\n      context.ref = match[1]\n    }\n\n    activity.panic({\n      id,\n      context,\n      error: err,\n    })\n  }\n  activity.done()\n\n  let deletedPageKeys = []\n  if (process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES) {\n    activity = report.activityTimer(`Delete previous page data`)\n    activity.start()\n    deletedPageKeys = buildUtils.collectRemovedPageData(\n      store.getState(),\n      cachedPageData\n    )\n    await buildUtils.removePageFiles(publicDir, deletedPageKeys)\n\n    activity.end()\n  }\n\n  activity = report.activityTimer(`onPostBuild`, { parentSpan: buildSpan })\n  activity.start()\n  await apiRunnerNode(`onPostBuild`, {\n    graphql: bootstrapGraphQLRunner,\n    parentSpan: buildSpan,\n  })\n  activity.end()\n\n  // Make sure we saved the latest state so we have all jobs cached\n  await db.saveState()\n\n  report.info(`Done building in ${process.uptime()} sec`)\n\n  buildSpan.finish()\n  await stopTracer()\n  workerPool.end()\n  buildActivity.end()\n\n  if (\n    process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    process.argv.includes(`--log-pages`)\n  ) {\n    if (pagePaths.length) {\n      report.info(\n        `Built pages:\\n${pagePaths\n          .map(path => `Updated page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n\n    if (deletedPageKeys.length) {\n      report.info(\n        `Deleted pages:\\n${deletedPageKeys\n          .map(path => `Deleted page: ${path}`)\n          .join(`\\n`)}`\n      )\n    }\n  }\n\n  if (\n    process.env.GATSBY_EXPERIMENTAL_PAGE_BUILD_ON_DATA_CHANGES &&\n    process.argv.includes(`--write-to-file`)\n  ) {\n    const createdFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `newPages.txt`\n    )\n    const deletedFilesPath = path.resolve(\n      `${program.directory}/.cache`,\n      `deletedPages.txt`\n    )\n\n    if (pagePaths.length) {\n      await fs.writeFile(createdFilesPath, `${pagePaths.join(`\\n`)}\\n`, `utf8`)\n      report.info(`.cache/newPages.txt created`)\n    }\n    if (deletedPageKeys.length) {\n      await fs.writeFile(\n        deletedFilesPath,\n        `${deletedPageKeys.join(`\\n`)}\\n`,\n        `utf8`\n      )\n      report.info(`.cache/deletedPages.txt created`)\n    }\n  }\n\n  if (await userPassesFeedbackRequestHeuristic()) {\n    showFeedbackRequest()\n  }\n}\n"],"file":"build.js"}